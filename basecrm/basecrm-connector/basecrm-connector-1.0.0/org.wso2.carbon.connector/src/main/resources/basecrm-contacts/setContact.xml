<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->

<template name="setContact" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="contactsId" description="Unique contact id for update." />
   <parameter name="contactName" description="Name of the contact only if a contact is an organization." />
   <parameter name="contactLastName" description="Last name of the contact only if a contact is an individual." />
   <parameter name="contactFirstName" description="First name of the contact only if a contact is an individual." />
   <parameter name="contactContactId" description="Id of an organization the contact belongs to." />
   <parameter name="contactEmail" description="Email of the contact." />
   <parameter name="contactPhone" description="Phone number of the contact." />
   <parameter name="contactMobile" description="Mobile phone number of the contact." />
   <parameter name="contactTwitter" description="Twitter nickname of the contact." />
   <parameter name="contactSkype" description="Skype nickname of the contact." />
   <parameter name="contactFacebook" description="Facebook nickname of the contact." />
   <parameter name="contactLinkedin" description="Linkedin nickname of the contact." />
   <parameter name="contactAddress" description="Address of the contact." />
   <parameter name="contactCity" description="City of the contact." />
   <parameter name="contactCountry" description="Country of the contact." />
   <parameter name="contactTitle" description="Job title of a contact." />
   <parameter name="contactDescription" description="Description title of a contact." />
   <parameter name="contactIndustry" description="Industry if the contact is an organisation." />
   <parameter name="contactWebsite" description="Website address if the contact is an organisation." />
   <parameter name="contactFax" description="Fax number if the contact is an organisation." />
   <parameter name="contactTagList" description="A list of tags for a contact separated with a comma." />
   <parameter name="contactPrivate" description="Whether the contact is private. Defaults to false." />

   <sequence>
      <property name="uri.var.contactsId" expression="$func:contactsId" />
      <property name="uri.var.contactName" expression="$func:contactName" />
      <property name="uri.var.contactLastName" expression="$func:contactLastName" />
      <property name="uri.var.contactFirstName" expression="$func:contactFirstName" />
      <property name="uri.var.contactContactId" expression="$func:contactContactId" />
      <property name="uri.var.contactEmail" expression="$func:contactEmail" />
      <property name="uri.var.contactPhone" expression="$func:contactPhone" />
      <property name="uri.var.contactMobile" expression="$func:contactMobile" />
      <property name="uri.var.contactTwitter" expression="$func:contactTwitter" />
      <property name="uri.var.contactSkype" expression="$func:contactSkype" />
      <property name="uri.var.contactFacebook" expression="$func:contactFacebook" />
      <property name="uri.var.contactLinkedin" expression="$func:contactLinkedin" />
      <property name="uri.var.contactAddress" expression="$func:contactAddress" />
      <property name="uri.var.contactCity" expression="$func:contactCity" />
      <property name="uri.var.contactCountry" expression="$func:contactCountry" />
      <property name="uri.var.contactTitle" expression="$func:contactTitle" />
      <property name="uri.var.contactDescription" expression="$func:contactDescription" />
      <property name="uri.var.contactIndustry" expression="$func:contactIndustry" />
      <property name="uri.var.contactWebsite" expression="$func:contactWebsite" />
      <property name="uri.var.contactFax" expression="$func:contactFax" />
      <property name="uri.var.contactTagList" expression="$func:contactTagList" />
      <property name="uri.var.contactPrivate" expression="$func:contactPrivate" />

      <payloadFactory media-type="json">
         <format>
            {
               "contact": {
                  "private": "$1"
               }
            }
         </format>
         <args>
            <arg expression="get-property('uri.var.contactPrivate')" />
         </args>
      </payloadFactory>

      <script language="js">
		    <![CDATA[
		    
		    var contactName = mc.getProperty("uri.var.contactName");
		    var contactLastName = mc.getProperty("uri.var.contactLastName");
		    var contactFirstName = mc.getProperty("uri.var.contactFirstName");
		    var contactContactId = mc.getProperty("uri.var.contactContactId");
		    var contactEmail = mc.getProperty("uri.var.contactEmail");
		    var contactPhone = mc.getProperty("uri.var.contactPhone");
		    var contactMobile = mc.getProperty("uri.var.contactMobile");
		    var contactTwitter = mc.getProperty("uri.var.contactTwitter");
		    var contactSkype = mc.getProperty("uri.var.contactSkype");
		    var contactFacebook = mc.getProperty("uri.var.contactFacebook");
		    var contactLinkedin = mc.getProperty("uri.var.contactLinkedin");
		    var contactAddress = mc.getProperty("uri.var.contactAddress");
		    var contactCity = mc.getProperty("uri.var.contactCity");
		    var contactCountry = mc.getProperty("uri.var.contactCountry");
		    var contactTitle = mc.getProperty("uri.var.contactTitle");
		    var contactDescription = mc.getProperty("uri.var.contactDescription");
		    var contactIndustry = mc.getProperty("uri.var.contactIndustry");
		    var contactWebsite = mc.getProperty("uri.var.contactWebsite");
		    var contactFax = mc.getProperty("uri.var.contactFax");
		    var contactTagList = mc.getProperty("uri.var.contactTagList");
		    
		    payload = mc.getPayloadJSON();
		    
		    if(contactName != null && contactName != ""){
		    	payload.contact.name = contactName;		    	
		    }
		    
		    if(contactLastName != null && contactLastName != ""){
		    	payload.contact.last_name = contactLastName;		    	
		    }
		    
		    if(contactFirstName != null && contactFirstName != ""){
		    	payload.contact.first_name = contactFirstName;		    	
		    }
		    
		    if(contactContactId != null && contactContactId != ""){
		    	payload.contact.contact_id = contactContactId;		    	
		    }
		    
		    if(contactEmail != null && contactEmail != ""){
		    	payload.contact.email = contactEmail;		    	
		    }
		    
		    if(contactPhone != null && contactPhone != ""){
		    	payload.contact.phone = contactPhone;		    	
		    }
		    
		    if(contactMobile != null && contactMobile != ""){
		    	payload.contact.mobile = contactMobile;		    	
		    }
		    
		    if(contactTwitter != null && contactTwitter != ""){
		    	payload.contact.twitter = contactTwitter;		    	
		    }
		    
		    if(contactSkype != null && contactSkype != ""){
		    	payload.contact.skype = contactSkype;		    	
		    }
		    
		    if(contactFacebook != null && contactFacebook != ""){
		    	payload.contact.facebook = contactFacebook;		    	
		    }
		    
		    if(contactLinkedin != null && contactLinkedin != ""){
		    	payload.contact.linkedin = contactLinkedin;		    	
		    }
		    
		    if(contactAddress != null && contactAddress != ""){
		    	payload.contact.address = contactAddress;		    	
		    }
		    
		    if(contactCity != null && contactCity != ""){
		    	payload.contact.city = contactCity;		    	
		    }
		    
		    if(contactCountry != null && contactCountry != ""){
		    	payload.contact.country = contactCountry;		    	
		    }
		    
		    if(contactTitle != null && contactTitle != ""){
		    	payload.contact.title = contactTitle;		    	
		    }
		    
		    if(contactDescription != null && contactDescription != ""){
		    	payload.contact.description = contactDescription;		    	
		    }
		    
		    if(contactIndustry != null && contactIndustry != ""){
		    	payload.contact.industry = contactIndustry;		    	
		    }
		    
		    if(contactWebsite != null && contactWebsite != ""){
		    	payload.contact.website = contactWebsite;		    	
		    }
		    
		    if(contactFax != null && contactFax != ""){
		    	payload.contact.fax = contactFax;		    	
		    }
		    
		    if(contactTagList != null && contactTagList != ""){
		    	payload.contact.tag_list = contactTagList;		    	
		    }
		    
		    mc.setPayloadJSON(payload);
		    
			]]>
      </script>

      <header name="X-Pipejump-Auth" expression="get-property('uri.var.token')" scope="transport" />

      <call>
         <endpoint>
            <http method="put" uri-template="{uri.var.apiUrl}/api/v1/contacts/{uri.var.contactsId}.{uri.var.responseType}" />
         </endpoint>
      </call>

      <!-- Remove custom header information in response -->
      <header name="X-Runtime" scope="transport" action="remove" />
      <header name="X-Pagination-Page" scope="transport" action="remove" />
      <header name="X-Frame-Options" scope="transport" action="remove" />
      <header name="X-Mesh-ID" scope="transport" action="remove" />
      <header name="X-Pagination-Per-Page" scope="transport" action="remove" />
      <header name="X-UA-Compatible" scope="transport" action="remove" />
      <header name="Strict-Transport-Security" scope="transport" action="remove" />
      <header name="ETag" scope="transport" action="remove" />
      <header name="Access-Control-Allow-Origin" scope="transport" action="remove" />
      <header name="Cache-Control" scope="transport" action="remove" />
      <header name="X-Operation-Id" scope="transport" action="remove" />

   </sequence>
</template>