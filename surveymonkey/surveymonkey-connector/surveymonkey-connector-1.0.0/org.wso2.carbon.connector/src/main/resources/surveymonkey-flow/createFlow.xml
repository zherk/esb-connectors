<template name="createFlow" xmlns="http://ws.apache.org/ns/synapse">
	<!-- Required Parameters -->
	<parameter name="templateId" description="The template identifier to use for creating the survey." />
	<parameter name="surveyTitle" description="The Title of the survey." />
	<!-- Optional Parameters -->
	<parameter name="fromSurveyId"
		description="The identifier of an existing survey to use for creating the survey." />
	<parameter name="collectorType" description="The type of collector." />
	<parameter name="collectorName" description="The Name of collector." />
	<parameter name="recipients" description="The array of resepients." />
	<parameter name="collectorSend" description="If true sends email message to recipients." />
	<parameter name="replyEmail" description="Reply email of the email message to be sent to recipients." />
	<parameter name="messageSubject" description="Subject of the email message to be sent to recipients." />
	<parameter name="messageBody" description="The plain text body of the email message to be sent to recipients." />

	<sequence>
		<property name="uri.var.templateId" expression="$func:templateId" />
		<property name="uri.var.surveyTitle" expression="$func:surveyTitle" />
		<property name="uri.var.fromSurveyId" expression="$func:fromSurveyId" />
		<property name="uri.var.collectorType" expression="$func:collectorType" />
		<property name="uri.var.collectorName" expression="$func:collectorName" />
		<property name="uri.var.recipients" expression="$func:recipients" />
		<property name="uri.var.collectorSend" expression="$func:collectorSend" />
		<property name="uri.var.replyEmail" expression="$func:replyEmail" />
		<property name="uri.var.messageSubject" expression="$func:messageSubject" />
		<property name="uri.var.messageBody" expression="$func:messageBody" />
		
		<payloadFactory media-type="json">
			<format>
				{
				"survey":{
				"survey_title":"$1"
				}
				}
			</format>
			<args>
				<arg expression="get-property('uri.var.surveyTitle')" />
			</args>
		</payloadFactory>

		<!-- Setting optional parameters -->
		<script language="js">
        	<![CDATA[
			
			payload = mc.getPayloadJSON();
			
			var templateId = mc.getProperty('uri.var.templateId');
			var fromSurveyId = mc.getProperty('uri.var.fromSurveyId');
			var collectorType = mc.getProperty('uri.var.collectorType');
			var collectorName = mc.getProperty('uri.var.collectorName');
			var recipients = mc.getProperty('uri.var.recipients');
			var collectorSend = mc.getProperty('uri.var.collectorSend');
			var replyEmail = mc.getProperty('uri.var.replyEmail');
			var messageSubject = mc.getProperty('uri.var.messageSubject');
			var messageBody = mc.getProperty('uri.var.messageBody');
			
			if (templateId != null && templateId != "") {
				payload.survey.template_id =templateId;
			}
			
			if (fromSurveyId != null && fromSurveyId != "") {
				payload.survey.from_survey_id =fromSurveyId;
			}
			
			//The collector object will be added, only if the sub parameters within it are sent.
			if((collectorType != null && collectorType != "") || (collectorName != null && collectorName != "") || 
				(recipients != null && recipients != "") || (collectorSend != null && collectorSend != "")){ 
				
				payload.collector = new Object();
					
				if (collectorType != null && collectorType != "") {
					payload.collector.type = collectorType;
				}
				
				if (collectorName != null && collectorName != "") {
					payload.collector.name = collectorName;
				}
				
				if (recipients != null && recipients != "") {
					payload.collector.recipients = eval("("+recipients+")");
				}
				
				if (collectorSend != null && collectorSend != "") {
					payload.collector.send = eval("("+collectorSend+")");
				}
			
			}
			
			//The email_message object will be added, only if the sub parameters within it are sent.
			if((replyEmail != null && replyEmail != "") || (messageSubject != null && messageSubject != "") || 
				(messageBody != null && messageBody != "")){
			
				payload.email_message = new Object();
			
				if (replyEmail != null && replyEmail != "") {
					payload.email_message.reply_email = replyEmail;
				}
				
				if (messageSubject != null && messageSubject != "") {
					payload.email_message.subject = messageSubject;
				}
				
				if (messageBody != null && messageBody != "") {
					payload.email_message.body_text = messageBody;
				}
			
			}
			
			mc.setPayloadJSON(payload);
			
			]]>
		</script>

		<call>
			<endpoint>
				<http method="post" uri-template="{uri.var.apiUrl}/v2/batch/create_flow?api_key={+uri.var.apiKey}" />
			</endpoint>
		</call>

		<!-- Remove response custom header information -->
		<header name="Access-Control-Expose-Headers" scope="transport" action="remove" />
		<header name="X-Mashery-Message-ID" scope="transport" action="remove" />
		<header name="Access-Control-Allow-Origin" scope="transport" action="remove" />
		<header name="SM-Request-ID" scope="transport" action="remove" />
		<header name="X-Mashery-Responder" scope="transport" action="remove" />
		<header name="X-Plan-Quota-Reset" scope="transport" action="remove" />
		<header name="X-Plan-Quota-Current" scope="transport" action="remove" />
		<header name="X-Plan-QPS-Allotted" scope="transport" action="remove" />
		<header name="X-Plan-Quota-Allotted" scope="transport" action="remove" />
		<header name="X-Plan-QPS-Current" scope="transport" action="remove" />

	</sequence>
</template>