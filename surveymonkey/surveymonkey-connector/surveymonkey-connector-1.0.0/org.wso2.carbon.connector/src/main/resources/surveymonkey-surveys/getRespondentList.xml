<template name="getRespondentList" xmlns="http://ws.apache.org/ns/synapse">
	<!-- Required parameters -->
	<parameter name="surveyId"
		description="The survey id, which must be an id of a created survey from the website." />
	<!-- Optional Parameters -->
	<parameter name="collectorId" description="Id of the collector gathering responses" />
	<parameter name="pageNumber" description="Pagination page number" />
	<parameter name="pageSize"
		description="Number of surveys to return per page. Defaults to 1000, 
		but basic users can only ever retrieve the first 100 respondents" />
	<parameter name="startDate"
		description="The startDate, Respondents must be created after this date" />
	<parameter name="endDate"
		description="The endDate, Respondents must be created before this date" />
	<parameter name="startModifiedDate"
		description="The startModifiedDate, Respondents must be modified after this date" />
	<parameter name="endModifiedDate"
		description="The endModifiedDate, Respondents must be modified before this date" />
	<parameter name="isOrderAscending"
		description="The isOrderAscending, if 'true' sorts ASC, if 'false' sorts DESC. Defaults to 'false' (DESC)" />
	<parameter name="orderBy"
		description="The orderBy, Column to sort results by. 
		One of the following: [respondent_id, date_modified, date_start]Defaults to respondent_id" />
	<parameter name="fields"
		description="The fields, Additional fields to return. 
		One or more of :[date_start, date_modified, collector_id, collection_mode, custom_id, email, 
		first_name, last_name, ip_address, status, analysis_url]" />

	<sequence>

		<property name="uri.var.surveyId" expression="$func:surveyId" />
		<property name="uri.var.collectorId" expression="$func:collectorId" />
		<property name="uri.var.pageNumber" expression="$func:pageNumber" />
		<property name="uri.var.pageSize" expression="$func:pageSize" />
		<property name="uri.var.startDate" expression="$func:startDate" />
		<property name="uri.var.endDate" expression="$func:endDate" />
		<property name="uri.var.startModifiedDate" expression="$func:startModifiedDate" />
		<property name="uri.var.endModifiedDate" expression="$func:endModifiedDate" />
		<property name="uri.var.isOrderAscending" expression="$func:isOrderAscending" />
		<property name="uri.var.orderBy" expression="$func:orderBy" />
		<property name="uri.var.fields" expression="$func:fields" />

		<!-- Check existance of optional parameters -->

		<script language="js">
        	<![CDATA[
			
			var surveyId = mc.getProperty('uri.var.surveyId');
			var collectorId = mc.getProperty('uri.var.collectorId');
			var pageNumber = mc.getProperty('uri.var.pageNumber');
			var pageSize = mc.getProperty('uri.var.pageSize');
			var startDate = mc.getProperty('uri.var.startDate');
			var endDate = mc.getProperty('uri.var.endDate');
			var startModifiedDate = mc.getProperty('uri.var.startModifiedDate');
			var endModifiedDate = mc.getProperty('uri.var.endModifiedDate');
			var isOrderAscending = mc.getProperty('uri.var.isOrderAscending');
			var orderBy = mc.getProperty('uri.var.orderBy');
			var fields = mc.getProperty('uri.var.fields');
			
			var jsonPayloadString = '"survey_id":"' + surveyId +'"';
			
			if (collectorId != null && collectorId != "") {
				jsonPayloadString += ',"collector_id":"' + collectorId + '"';
			}
			
			if (pageNumber != null && pageNumber != "") {
				jsonPayloadString += ',"page":' + pageNumber;
			}
			
			if (pageSize != null && pageSize != "") {
				jsonPayloadString += ',"page_size":' + pageSize;
			}
			
			if (startDate != null && startDate != "") {
				jsonPayloadString += ',"start_date":"' + startDate + '"';
			}
			
			if (endDate != null && endDate != "") {
				jsonPayloadString += ',"end_date":"' + endDate + '"';
			}
			
			if (startModifiedDate != null && startModifiedDate != "") {
				jsonPayloadString += ',"start_modified_date":"' + startModifiedDate + '"';
			}
			
			if (endModifiedDate != null && endModifiedDate != "") {
				jsonPayloadString += ',"end_modified_date":"' + endModifiedDate + '"';
			}
			
			if (isOrderAscending != null && isOrderAscending != "") {
				jsonPayloadString += ',"order_asc":' + isOrderAscending;
			}
			
			if (orderBy != null && orderBy != "") {
				jsonPayloadString += ',"order_by":"' + orderBy + '"';
			}
			
			if (fields != null && fields != "") {
				jsonPayloadString += ',"fields":' + fields;
			}
			
			mc.setProperty('uri.var.jsonPayloadString', jsonPayloadString);
			
			]]>
		</script>

		<payloadFactory media-type="json">
			<format>
				{
				$1
				}
			</format>
			<args>
				<arg expression="get-property('uri.var.jsonPayloadString')" />
			</args>
		</payloadFactory>

		<call>
			<endpoint>
				<http method="post"
					uri-template="{uri.var.apiUrl}/v2/surveys/get_respondent_list?api_key={+uri.var.apiKey}" />
			</endpoint>
		</call>

		<!-- Remove response custom header information -->
		<header name="Access-Control-Expose-Headers" scope="transport" action="remove" />
		<header name="X-Mashery-Message-ID" scope="transport" action="remove" />
		<header name="Access-Control-Allow-Origin" scope="transport" action="remove" />
		<header name="SM-Request-ID" scope="transport" action="remove" />
		<header name="X-Mashery-Responder" scope="transport" action="remove" />

	</sequence>
</template>